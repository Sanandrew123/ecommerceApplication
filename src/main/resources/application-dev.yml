# 文件级分析：
# - 职责：开发环境特定配置，覆盖主配置文件中的相关设置
# - 位置考虑：resources目录下，与主配置文件同级，便于管理
# - 命名原因：Spring Boot profile命名约定，application-{profile}.yml
# - 调用关系：当spring.profiles.active=dev时被自动加载
#
# 设计思路：
# 1. 针对开发环境的特殊需求进行配置优化
# 2. 启用开发友好的功能（如SQL日志、详细错误信息等）
# 3. 降低一些安全限制，方便开发调试
# 4. 配置本地开发数据库和缓存

# 数据源配置 - 开发环境
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/ecommerce_dev?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    
  # JPA配置 - 开发环境
  jpa:
    hibernate:
      ddl-auto: create-drop  # 开发环境每次启动重建表结构
    show-sql: true
    format-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: true  # 生成统计信息，便于性能分析
    
  # Redis配置 - 开发环境
  data:
    redis:
      host: localhost
      port: 6379
      database: 1  # 使用数据库1，避免与其他项目冲突
      
  # 开发工具配置
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
    livereload:
      enabled: true

# 日志配置 - 开发环境
logging:
  level:
    root: INFO
    com.ecommerce: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    
# 监控配置 - 开发环境
management:
  endpoints:
    web:
      exposure:
        include: "*"  # 开发环境暴露所有端点
  endpoint:
    health:
      show-details: always
    env:
      show-values: always

# 应用自定义配置 - 开发环境
app:
  # JWT配置 - 开发环境使用较短的过期时间便于测试
  jwt:
    expiration: 3600000  # 1小时，便于开发调试
    
  # 文件存储配置
  file:
    upload-path: ./uploads/dev/
    
  # 开发环境特定配置
  dev:
    mock-data-enabled: true  # 启用模拟数据
    sql-init-enabled: true   # 启用SQL初始化脚本
    cache-enabled: false     # 开发环境可选择关闭缓存，便于调试